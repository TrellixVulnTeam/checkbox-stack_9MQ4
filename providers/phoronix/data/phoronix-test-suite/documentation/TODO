PHORONIX TEST SUITE PUBLIC TODO LIST:

### PTS-CORE ###

- Move External Dependencies into OpenBenchmarking.org cloud
- Reporting to OpenBenchmarking.org on broken download URLs for test profiles.
- Reporting of install times to OpenBenchmarking.org and also exposing this information back to clients.
- Support for multiple languages / internationalization.
- BLKID fall-back support for determining file-system [e.g. /sbin/blkid -s TYPE -o value /dev/sda1].
- Possibly restore "weighted suites" [http://phorogit.com/index.php?p=phoronix-test-suite.git&a=commitdiff&h=548e5c073cc90d92ac3f382ca4933d5f556e78c6&hb=444441f9be866f51920e0ad8ca3909951b4d90c5]
- Integrate finish-run command into the run command, auto-detect if the result file was a partial save and then ask if to perform run recovery'
- Multi-threaded downloading of test files
- Optimus / DRI_PRIME=1 / xrandr --listproviders better GPU detection
- NVIDIA make use of UsedDedicatedGPUMemory as new GPU sensor
- Clean up all the WebSocket code and make it fit to spec
- Incremental/streaming result uploads support
- Check with Phodevi's parsers what other tools support JSON outputs - e.g. http://karelzak.blogspot.com/2015/06/json-output-for-basic-tools.html for cleaner parsing
- Improve titles on tables like in: http://openbenchmarking.org/result/1603172-GA-AMDTONGA973

### PTS-GRAPH ###

- Rotated text alignment for some PNG graphics is sometimes off by 90/180 degrees compared to SVG, e.g. http://openbenchmarking.org/s/Compiler

### OPENBENCHMARKING.ORG ###

- Shorten long change-logs on test profile pages - e.g. http://openbenchmarking.org/test/pts/hpcc

### WEB SOCKET / HTML5 USER INTERFACE WORK ###

- Implement WebSocket security - add the password prompts from ~/.phoronix-test-suite/user-config.xml, etc
- HTTPS support
- Ensuring only one session at a time, at least for benchmarking
- Handle test installations and external dependencies (prompting for root password handling?)
- Porting more of the web-interface code to the new JavaScript + WebSocket design rather than original PHP design [Originally with the 5.0 UI design it wasn't settled for mostly JS + WebSocket but some of the original code is with a traditional PHP-based + web server design... so slowly move over to newer design.]

### PHOROMATIC ####

- Implement the complementary WebSocket communication to HTTP pulls
- Ensure sane validating of more user input / resource uploads
- Hook up TriggerTarget for allowing event.php to optionally specify a sub-set of systems/groups to target for a given trigger
- Clean up the code and modularize more of the code
